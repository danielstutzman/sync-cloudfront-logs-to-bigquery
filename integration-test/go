#!/bin/bash -ex

# Setup fake S3
lsof -i :8000 || docker run \
  --name s3server \
  -p 8000:8000 \
  -e S3BACKEND=mem \
  -e SCALITY_ACCESS_KEY_ID=newAccessKey \
  -e SCALITY_SECRET_ACCESS_KEY=newSecretKey \
  scality/s3server

# Setup fixtures in fake S3
./aws-s3-cli rb s3://belugacdn-logs-danstutzman --force
./aws-s3-cli mb s3://belugacdn-logs-danstutzman
mkdir -p fixtures
gzip > fixtures/belugacdn-0ad34793-f0f5-4812-a202-9e0e7667973e.gz <<EOF
{"time":"1511028771","duration":"0.004","trace":"2864d1d0-4c28-4b5d-9173-7baa15443198","server_region":"Frankfurt","protocol":"HTTP/1.1","property_name":"","status":"302","response_size":"0","header_size":"396","remote_addr":"77.88.47.63","request_method":"GET","host":"www.danstutzman.com","uri":"/robots.txt","user_agent":"Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)","referer":"-","content_type":"text/plain; charset=utf-8","cache_status":"uncacheable","geo_continent":"North America","geo_continent_code":"NA","geo_country":"United States","geo_country_code":"US"}
{"time":"1511028775","duration":"0.001","trace":"50f1e7a9-dcdb-4b40-9450-2e38f708c825","server_region":"Frankfurt","protocol":"HTTP/1.1","property_name":"","status":"302","response_size":"0","header_size":"386","remote_addr":"93.158.161.136","request_method":"GET","host":"www.danstutzman.com","uri":"/","user_agent":"Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)","referer":"-","content_type":"text/plain; charset=utf-8","cache_status":"uncacheable","geo_continent":"Europe","geo_continent_code":"EU","geo_country":"Russia","geo_country_code":"RU"}
EOF
./aws-s3-cli cp \
  fixtures/belugacdn-0ad34793-f0f5-4812-a202-9e0e7667973e.gz \
  s3://belugacdn-logs-danstutzman/dt=2017-11-18/hour=18/belugacdn-0ad34793-f0f5-4812-a202-9e0e7667973e.gz \
  --content-type=binary/octet-stream

# Setup fake BigQuery
if [ ! -e fixtures/discovery.json ]; then
  curl https://www.googleapis.com/discovery/v1/apis/bigquery/v2/rest > fixtures/discovery.json
fi
lsof -i :9090 && { echo 1>&2 "fake-big-query is already running"; exit 1; }
$GOPATH/bin/fake-big-query \
  -discovery-json-path=$PWD/fixtures/discovery.json \
  -port 9090 &
FAKE_BIGQUERY_PID=$!

# Setup InfluxDB
lsof -i :8086 || docker run -d \
  --name=influxdb-test \
  -p 8086:8086 \
  influxdb 
docker exec influxdb-test influx -execute 'drop database mydb'

# Actually run the test
$GOPATH/bin/sync-log-files-to-db config.json

# Check output from fake BigQuery
cat >expected.json <<EOF
[
  {
    "cache_status": "uncacheable",
    "duration": "0.004",
    "geo_continent": "North America",
    "geo_continent_code": "NA",
    "geo_country": "United States",
    "geo_country_code": "US",
    "header_size": "396",
    "host": "www.danstutzman.com",
    "property_name": "",
    "protocol": "HTTP/1.1",
    "remote_addr": "77.88.47.63",
    "request_method": "GET",
    "response_size": "0",
    "server_region": "Frankfurt",
    "status": "302",
    "time": "2017-11-18 18:12:51",
    "trace": "2864d1d0-4c28-4b5d-9173-7baa15443198",
    "uri": "/robots.txt",
    "user_agent": "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)"
  },
  {
    "cache_status": "uncacheable",
    "duration": "0.001",
    "geo_continent": "Europe",
    "geo_continent_code": "EU",
    "geo_country": "Russia",
    "geo_country_code": "RU",
    "header_size": "386",
    "host": "www.danstutzman.com",
    "property_name": "",
    "protocol": "HTTP/1.1",
    "remote_addr": "93.158.161.136",
    "request_method": "GET",
    "response_size": "0",
    "server_region": "Frankfurt",
    "status": "302",
    "time": "2017-11-18 18:12:55",
    "trace": "50f1e7a9-dcdb-4b40-9450-2e38f708c825",
    "uri": "/",
    "user_agent": "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)"
  }
]
EOF
bq --api http://localhost:9090 query --format prettyjson 'select * from belugacdn_logs.visits' > actual.json
diff -u -w expected.json actual.json
if [ "$?" != 0 ]; then
  exit 1
fi
rm -f expected.json actual.json

# Check output from InfluxDB
cat >expected.json <<EOF
key
---
belugacdn_logs,host=www.danstutzman.com
EOF
docker exec influxdb-test influx -database mydb -execute 'show series' \
  > actual.json
diff -u -w expected.json actual.json
if [ "$?" != 0 ]; then
  exit 1
fi
rm -f expected.json actual.json

kill $FAKE_BIGQUERY_PID
echo 1>&2 "Success"
